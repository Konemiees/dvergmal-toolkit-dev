---
import { Player } from "astro:db";
import DiceTray from "../../../components/dynamic/DiceTray";
import { getDierollsInGame } from "../../../db/repository/dieroll";
import {
  getGameByPlayerAndGameId,
  getPlayerInGame,
} from "../../../db/repository/game";
import { getCurrentPlayerId } from "../../../db/utils/session";
import Toolkit from "../../../layouts/toolkit.astro";
import PlayersInGame from "../../../components/PlayersInGame.astro";
import OwnerSidebar from "../../../components/OwnerSidebar.astro";

const gameId = Astro.params.gameId;
const userId = await getCurrentPlayerId(Astro.cookies);
if (!userId) {
  console.error("No user logged in, redirecting to /");
  return Astro.redirect("/");
}

if (!gameId) {
  console.error("No gameId provided in URL, redirecting to /toolkit");
  return Astro.redirect("/toolkit");
}

const game = await getGameByPlayerAndGameId(userId, Number(gameId));
if (!game) {
  console.error(`No access to game with id ${gameId}, redirecting to /toolkit`);
  return Astro.redirect("/toolkit");
}

const dieRolls = await getDierollsInGame(userId, Number(gameId));
const gameStatus = await getPlayerInGame(userId, Number(gameId));
---

<Toolkit>
  <div class="card max-w-md flex-1 bg-base-200 hidden md:flex">
    <div class="card-body">
      <h1 class="card-title">{game.name}</h1>

      {
        gameStatus.isOwner ? (
          <OwnerSidebar gameId={Number(gameId)} />
        ) : (
          <PlayersInGame gameId={Number(gameId)} />
        )
      }
    </div>
  </div>
  <div class="card flex-2 bg-base-200 w-full">
    <div class="card-body">
      <h2 class="card-title">Dice Tray</h2>
      <DiceTray
        playerId={userId}
        gameId={Number(gameId)}
        initialRolls={dieRolls}
        client:only
      />
    </div>
  </div>
</Toolkit>
